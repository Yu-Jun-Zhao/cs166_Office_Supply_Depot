// server
const mysql =require('mysql');
const express =require('express');
var app = express();
const bodyparser =require('body-parser');

app.use(bodyparser.json());

var mysqlConnection = mysql.createConnection({
    host:'localhost',
    user: 'root',
    password: '.....',
    database: 'office_depot'
});

mysqlConnection.connect((err)=> {
    if(!err)
        console.log('DB connection succeded.');
    else
        console.log('DB connection failed \n Error: ' + JSON.stringify(err,undefined, 2));       
});

app.use(function(req, res, next) {
    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    next();
  });

app.listen(4000, ()=>console.log('Express server is running at port no: 4000'));

const show_Users = `Select * from userinfo`;
app.get('/users', (req, res)=>{
    mysqlConnection.query(show_Users, (err, results)=>{
        if(err)
            return res.send(err)
        else {
            return res.json({
                data: results})
        }
    });
});

app.post('/users/add', (req, res) => {
    console.log(req.body);
    const {username, pwd, isAdmin} = req.body;
    console.log(username, pwd, isAdmin);
    const insert_User = `INSERT into userinfo (username, pwd, isAdmin) values('${username}', '${pwd}', ${isAdmin})`;
    console.log(insert_User);
    mysqlConnection.query(insert_User, (err, results) =>{
        if(err)
            return res.send(err)
        else   
            return res.send('successfully added user')
    });
});




///////////////////////////////// client
import React, { Component } from 'react';

// Main app
class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      username: '',
      password: '',
      users: []
    };
    this.handleChangeusername = this.handleChangeusername.bind(this);
    this.handleChangepassword = this.handleChangepassword.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  componentDidMount() {
    this.getUsers();
  }
  getUsers = _=>{
    fetch('http://localhost:4000/users')
    .then(response => response.json())
    .then(response => this.setState({ users: response.data}))
    .catch(err => console.error(err))
  }

  postUsers = _=>{
    fetch('http://localhost:4000/users/add',{
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
        // "Content-Type": "application/x-www-form-urlencoded",
    },
      body: JSON.stringify({
        username: this.state.username,
        pwd: this.state.password,
        isAdmin: false
      }),
    })
    .then(response => response.json())
    .catch(err => console.error(err))
  }


  renderUser = ({username}) => <div key={username}>{username}</div>

  handleChangeusername(event) {
    this.setState({'username': event.target.value});
  }
  handleChangepassword(event) {
    this.setState({'password': event.target.value});
  }
  handleSubmit(event) {
    event.preventDefault();
    console.log(this.state);
    this.postUsers();
    this.getUsers();
  }

  render() {
    const { users } = this.state;
    return(
      <div>
      <div>
      {users.map(this.renderUser)}
      </div>
              <form onSubmit= {this.handleSubmit}>
                  <label>
                    Username:
                    <input type="text" value={this.state.username} onChange={this.handleChangeusername} name='username' />
                  </label>
                  <label>
                  Password:
                  <input type="text" value={this.state.password} onChange={this.handleChangepassword} name='password'/>
                </label>
                <input type='submit' value='Sign In'/>
              </form>
      </div>
    )
  }
}
export default App;
